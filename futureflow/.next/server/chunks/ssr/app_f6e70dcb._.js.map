{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/app/lib/schema.js"],"sourcesContent":["// This is schema is use to validate the form that user fill using zod\r\n//Creating schema using zod\r\nimport { z } from \"zod\";\r\n\r\nexport const onboardingSchema = z.object({\r\n  industry: z.string({\r\n    required_error: \"Please select an industry \",\r\n  }),\r\n  subIndustry: z.string({\r\n    required_error: \"Please select an specialization \",\r\n  }),\r\n  bio: z\r\n    .string()\r\n    .max(500, {\r\n      message: \"Bio must be at most 200 characters long\",\r\n    })\r\n    .optional(),\r\n\r\n  experience: z\r\n    .string()\r\n    .transform((val) => parseInt(val, 10))\r\n    .pipe(\r\n      z\r\n        .number()\r\n        .min(0, \"Experience must be at least 0 years\")\r\n        .max(50, \"Experience must be at most 50 years\")\r\n    ),\r\n  skills: z.string().transform((val) =>\r\n    val\r\n      ? val\r\n          .split(\",\")\r\n          .map((skill) => skill.trim())\r\n          .filter(Boolean)\r\n      : undefined\r\n  ),\r\n});\r\n"],"names":[],"mappings":"AAAA,sEAAsE;AACtE,2BAA2B;;;;AAC3B;AAAA;;AAEO,MAAM,mBAAmB,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACjB,gBAAgB;IAClB;IACA,aAAa,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACpB,gBAAgB;IAClB;IACA,KAAK,iLAAA,CAAA,IAAC,CACH,MAAM,GACN,GAAG,CAAC,KAAK;QACR,SAAS;IACX,GACC,QAAQ;IAEX,YAAY,iLAAA,CAAA,IAAC,CACV,MAAM,GACN,SAAS,CAAC,CAAC,MAAQ,SAAS,KAAK,KACjC,IAAI,CACH,iLAAA,CAAA,IAAC,CACE,MAAM,GACN,GAAG,CAAC,GAAG,uCACP,GAAG,CAAC,IAAI;IAEf,QAAQ,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAC5B,MACI,IACG,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,QAAU,MAAM,IAAI,IACzB,MAAM,CAAC,WACV;AAER","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/app/%28main%29/onboarding/_components/onboarding-form.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useForm } from \"react-hook-form\"\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport { onboardingSchema } from \"@/app/lib/schema\"\r\nimport { useState } from \"react\"\r\nimport { useRouter } from \"next/navigation\"\r\n\r\nconst OnboardingForm = ({industries}) => {\r\n\r\n\r\n  const [selectedIndustry, setselectedIndustry] = useState(null)\r\n  const router = useRouter()\r\n\r\n  const {register,handleSubmit,formState:{errors},setValue,watch} = useForm({\r\n    resolver:zodResolver(onboardingSchema)\r\n  })\r\n\r\n  return (\r\n    <div><Card>\r\n  <CardHeader>\r\n    <CardTitle>Card Title</CardTitle>\r\n    <CardDescription>Card Description</CardDescription>\r\n    <CardAction>Card Action</CardAction>\r\n  </CardHeader>\r\n  <CardContent>\r\n    <p>Card Content</p>\r\n  </CardContent>\r\n  <CardFooter>\r\n    <p>Card Footer</p>\r\n  </CardFooter>\r\n</Card></div>\r\n  )\r\n}\r\n\r\nexport default OnboardingForm"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQA,MAAM,iBAAiB,CAAC,EAAC,UAAU,EAAC;IAGlC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,EAAC,QAAQ,EAAC,YAAY,EAAC,WAAU,EAAC,MAAM,EAAC,EAAC,QAAQ,EAAC,KAAK,EAAC,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;QACxE,UAAS,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,oHAAA,CAAA,mBAAgB;IACvC;IAEA,qBACE,8OAAC;kBAAI,cAAA,8OAAC;;8BACR,8OAAC;;sCACC,8OAAC;sCAAU;;;;;;sCACX,8OAAC;sCAAgB;;;;;;sCACjB,8OAAC;sCAAW;;;;;;;;;;;;8BAEd,8OAAC;8BACC,cAAA,8OAAC;kCAAE;;;;;;;;;;;8BAEL,8OAAC;8BACC,cAAA,8OAAC;kCAAE;;;;;;;;;;;;;;;;;;;;;;AAIP;uCAEe","debugId":null}}]
}