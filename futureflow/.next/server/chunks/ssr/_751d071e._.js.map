{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/hooks/use-fetch.js"],"sourcesContent":["import { toast } from \"sonner\";\r\n\r\nconst { useState } = require(\"react\");\r\n\r\nconst useFetch = (cb) => {\r\n  const [data, setData] = useState(undefined);\r\n  const [loading, setLoading] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fn = async (...args) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await cb(...args);\r\n      setData(response);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error);\r\n      toast.error(\r\n        `Error: ${error.message || \"An unexpected error occurred\"}`\r\n      );\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    fn,\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,EAAE,QAAQ,EAAE;AAElB,MAAM,WAAW,CAAC;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,SAAS;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,SAAS;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,SAAS;IAEnC,MAAM,KAAK,OAAO,GAAG;QACnB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,OAAO;YACd,SAAS;YACT,wIAAA,CAAA,QAAK,CAAC,KAAK,CACT,CAAC,OAAO,EAAE,MAAM,OAAO,IAAI,gCAAgC;QAE/D,SACQ;YACN,WAAW;QACb;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/app/%28main%29/interview/_components/quiz.jsx"],"sourcesContent":["\"use client\";\r\nimport { generateQuiz } from \"@/actions/interview\";\r\nimport useFetch from \"@/hooks/use-fetch\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Quiz = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [showExplanation, setShowExplanation] = useState(false);\r\n\r\n  //We where use the fn to call this and generate all the question\r\n  const {\r\n    loading: generateQuiz,\r\n    fn: generateQuizFn,\r\n    data: quizData,\r\n  } = useFetch(generateQuiz);\r\n\r\n  if(!quizData){\r\n    return(\r\n        <Card>\r\n  <CardHeader>\r\n    <CardTitle>Card Title</CardTitle>\r\n    <CardDescription>Card Description</CardDescription>\r\n    <CardAction>Card Action</CardAction>\r\n  </CardHeader>\r\n  <CardContent>\r\n    <p>Card Content</p>\r\n  </CardContent>\r\n  <CardFooter>\r\n    <p>Card Footer</p>\r\n  </CardFooter>\r\n</Card>\r\n    )\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default Quiz;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;;AAKA,MAAM,OAAO;IACX,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,gEAAgE;IAChE,MAAM,EACJ,SAAS,YAAY,EACrB,IAAI,cAAc,EAClB,MAAM,QAAQ,EACf,GAAG,CAAA,GAAA,qHAAA,CAAA,UAAQ,AAAD,EAAE;IAEb,IAAG,CAAC,UAAS;QACX,qBACI,8OAAC;;8BACP,8OAAC;;sCACC,8OAAC;sCAAU;;;;;;sCACX,8OAAC;sCAAgB;;;;;;sCACjB,8OAAC;sCAAW;;;;;;;;;;;;8BAEd,8OAAC;8BACC,cAAA,8OAAC;kCAAE;;;;;;;;;;;8BAEL,8OAAC;8BACC,cAAA,8OAAC;kCAAE;;;;;;;;;;;;;;;;;IAIL;IAEA,qBAAO,8OAAC;;;;;AACV;uCAEe","debugId":null}}]
}