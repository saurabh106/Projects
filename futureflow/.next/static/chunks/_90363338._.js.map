{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAEf;KAfS","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/components/ui/tabs.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Tabs({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <TabsPrimitive.Root\r\n      data-slot=\"tabs\"\r\n      className={cn(\"flex flex-col gap-2\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction TabsList({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <TabsPrimitive.List\r\n      data-slot=\"tabs-list\"\r\n      className={cn(\r\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction TabsTrigger({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <TabsPrimitive.Trigger\r\n      data-slot=\"tabs-trigger\"\r\n      className={cn(\r\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction TabsContent({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <TabsPrimitive.Content\r\n      data-slot=\"tabs-content\"\r\n      className={cn(\"flex-1 outline-none\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf;KAVS;AAYT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/app/lib/schema.js"],"sourcesContent":["// This is schema is use to validate the form that user fill using zod\r\n//Creating schema using zod\r\nimport { z } from \"zod\";\r\n\r\nexport const onboardingSchema = z.object({\r\n  industry: z.string({\r\n    required_error: \"Please select an industry \",\r\n  }),\r\n  subIndustry: z.string({\r\n    required_error: \"Please select an specialization \",\r\n  }),\r\n  bio: z\r\n    .string()\r\n    .max(500, {\r\n      message: \"Bio must be at most 200 characters long\",\r\n    })\r\n    .optional(),\r\n\r\n  experience: z\r\n    .string()\r\n    .transform((val) => parseInt(val, 10))\r\n    .pipe(\r\n      z\r\n        .number()\r\n        .min(0, \"Experience must be at least 0 years\")\r\n        .max(50, \"Experience must be at most 50 years\")\r\n    ),\r\n  skills: z.string().transform((val) =>\r\n    val\r\n      ? val\r\n          .split(\",\")\r\n          .map((skill) => skill.trim())\r\n          .filter(Boolean)\r\n      : undefined\r\n  ),\r\n});\r\n\r\nexport const contactSchema = z.object({\r\n  email: z.string().email(\"Invalid email address\"),\r\n  mobile: z.string().optional(),\r\n  linkedin: z.string().optional(),\r\n  x: z.string().optional(),\r\n});\r\n\r\nexport const entrySchema = z\r\n  .object({\r\n    title: z.string().min(1, \"Title is required\"),\r\n    organization: z.string().min(1, \"Organization is required\"),\r\n    startDate: z.string().min(1, \"Start date is required\"),\r\n    endDate: z.string().optional(),\r\n    description: z.string().min(1, \"Description is required\"),\r\n    current: z.boolean().default(false),\r\n  })\r\n  .refine(\r\n    (data) => {\r\n      if (!data.current && !data.endDate) {\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    {\r\n      message: \"End date is required unless this is your current position\",\r\n      path: [\"endDate\"],\r\n    }\r\n  );\r\n\r\nexport const resumeSchema = z.object({\r\n  contactInfo: contactSchema,\r\n  summary: z.string().min(1, \"Professional summary is required\"),\r\n  skills: z.string().min(1, \"Skills are required\"),\r\n  experience: z.array(entrySchema),\r\n  education: z.array(entrySchema),\r\n  projects: z.array(entrySchema),\r\n});\r\n\r\nexport const coverLetterSchema = z.object({\r\n  companyName: z.string().min(1, \"Company name is required\"),\r\n  jobTitle: z.string().min(1, \"Job title is required\"),\r\n  jobDescription: z.string().min(1, \"Job description is required\"),\r\n});\r\n"],"names":[],"mappings":"AAAA,sEAAsE;AACtE,2BAA2B;;;;;;;;AAC3B;AAAA;;AAEO,MAAM,mBAAmB,oLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,UAAU,oLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACjB,gBAAgB;IAClB;IACA,aAAa,oLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACpB,gBAAgB;IAClB;IACA,KAAK,oLAAA,CAAA,IAAC,CACH,MAAM,GACN,GAAG,CAAC,KAAK;QACR,SAAS;IACX,GACC,QAAQ;IAEX,YAAY,oLAAA,CAAA,IAAC,CACV,MAAM,GACN,SAAS,CAAC,CAAC,MAAQ,SAAS,KAAK,KACjC,IAAI,CACH,oLAAA,CAAA,IAAC,CACE,MAAM,GACN,GAAG,CAAC,GAAG,uCACP,GAAG,CAAC,IAAI;IAEf,QAAQ,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,MAC5B,MACI,IACG,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,QAAU,MAAM,IAAI,IACzB,MAAM,CAAC,WACV;AAER;AAEO,MAAM,gBAAgB,oLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,OAAO,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,QAAQ,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC3B,UAAU,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,GAAG,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AACxB;AAEO,MAAM,cAAc,oLAAA,CAAA,IAAC,CACzB,MAAM,CAAC;IACN,OAAO,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACzB,cAAc,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAChC,WAAW,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,SAAS,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC5B,aAAa,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,SAAS,oLAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,GACC,MAAM,CACL,CAAC;IACC,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,OAAO,EAAE;QAClC,OAAO;IACT;IACA,OAAO;AACT,GACA;IACE,SAAS;IACT,MAAM;QAAC;KAAU;AACnB;AAGG,MAAM,eAAe,oLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,aAAa;IACb,SAAS,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,QAAQ,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC1B,YAAY,oLAAA,CAAA,IAAC,CAAC,KAAK,CAAC;IACpB,WAAW,oLAAA,CAAA,IAAC,CAAC,KAAK,CAAC;IACnB,UAAU,oLAAA,CAAA,IAAC,CAAC,KAAK,CAAC;AACpB;AAEO,MAAM,oBAAoB,oLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,aAAa,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,UAAU,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,gBAAgB,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AACpC","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/hooks/use-fetch.js"],"sourcesContent":["import { toast } from \"sonner\";\r\n\r\nconst { useState } = require(\"react\");\r\n\r\nconst useFetch = (cb) => {\r\n  const [data, setData] = useState(undefined);\r\n  const [loading, setLoading] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fn = async (...args) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await cb(...args);\r\n      setData(response);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error);\r\n      toast.error(\r\n        `Error: ${error.message || \"An unexpected error occurred\"}`\r\n      );\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    fn,\r\n    setData\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n"],"names":[],"mappings":";;;AAAA;;;AAEA,MAAM,EAAE,QAAQ,EAAE;AAElB,MAAM,WAAW,CAAC;;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,SAAS;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,SAAS;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,SAAS;IAEnC,MAAM,KAAK,OAAO,GAAG;QACnB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,OAAO;YACd,SAAS;YACT,2IAAA,CAAA,QAAK,CAAC,KAAK,CACT,CAAC,OAAO,EAAE,MAAM,OAAO,IAAI,gCAAgC;QAE/D,SACQ;YACN,WAAW;QACb;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF;GA/BM;uCAiCS","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/actions/resume.js"],"sourcesContent":["\"use server\";\r\n\r\nimport { db } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\nconst genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\r\nconst model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\r\n\r\nexport async function saveResume(content) {\r\n  const { userId } = await auth();\r\n  if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n  const user = await db.user.findUnique({\r\n    where: { clerkUserId: userId },\r\n  });\r\n\r\n  if (!user) throw new Error(\"User not found\");\r\n\r\n  try {\r\n    const resume = await db.resume.upsert({\r\n      where: {\r\n        userId: user.id,\r\n      },\r\n      update: {\r\n        content,\r\n      },\r\n      create: {\r\n        userId: user.id,\r\n        content,\r\n      },\r\n    });\r\n\r\n    revalidatePath(\"/resume\");\r\n    return resume;\r\n  } catch (error) {\r\n    console.error(\"Error saving resume:\", error);\r\n    throw new Error(\"Failed to save resume\");\r\n  }\r\n}\r\n\r\nexport async function getResume() {\r\n  const { userId } = await auth();\r\n  if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n  const user = await db.user.findUnique({\r\n    where: { clerkUserId: userId },\r\n  });\r\n\r\n  if (!user) throw new Error(\"User not found\");\r\n\r\n  return await db.resume.findUnique({\r\n    where: {\r\n      userId: user.id,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function improveWithAI({ current, type }) {\r\n  const { userId } = await auth();\r\n  if (!userId) throw new Error(\"Unauthorized\");\r\n\r\n  const user = await db.user.findUnique({\r\n    where: { clerkUserId: userId },\r\n    include: {\r\n      industryInsight: true,\r\n    },\r\n  });\r\n\r\n  if (!user) throw new Error(\"User not found\");\r\n\r\n  const prompt = `\r\n    As an expert resume writer, improve the following ${type} description for a ${user.industry} professional.\r\n    Make it more impactful, quantifiable, and aligned with industry standards.\r\n    Current content: \"${current}\"\r\n\r\n    Requirements:\r\n    1. Use action verbs\r\n    2. Include metrics and results where possible\r\n    3. Highlight relevant technical skills\r\n    4. Keep it concise but detailed\r\n    5. Focus on achievements over responsibilities\r\n    6. Use industry-specific keywords\r\n    \r\n    Format the response as a single paragraph without any additional text or explanations.\r\n  `;\r\n\r\n  try {\r\n    const result = await model.generateContent(prompt);\r\n    const response = result.response;\r\n    const improvedContent = response.text().trim();\r\n    return improvedContent;\r\n  } catch (error) {\r\n    console.error(\"Error improving content:\", error);\r\n    throw new Error(\"Failed to improve content\");\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAUsB,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/components/ui/input.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Input({\r\n  className,\r\n  type,\r\n  ...props\r\n}) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,MAAM,EACb,SAAS,EACT,IAAI,EACJ,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAEf;KAjBS","debugId":null}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["file:///A:/Projects/futureflow/app/%28main%29/resume/_components/resume-builder.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Download, Save } from \"lucide-react\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { resumeSchema } from \"@/app/lib/schema\";\r\nimport useFetch from \"@/hooks/use-fetch\";\r\nimport { saveResume } from \"@/actions/resume\";\r\nimport { Input } from \"@/components/ui/input\";\r\n\r\nconst ResumeBuilder = ({ intialContent }) => {\r\n  const [activeTab, setActiveTab] = useState(\"edit\");\r\n\r\n  const {\r\n    control,\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: zodResolver(resumeSchema),\r\n    defaultValues: {\r\n      contactInfo: {},\r\n      summary: \"\",\r\n      skills: \"\",\r\n      experience: [],\r\n      education: [],\r\n      projects: [],\r\n    },\r\n  });\r\n\r\n  const {\r\n    loading: isSaving,\r\n    fn: saveResumeFn,\r\n    data: saveResult,\r\n    error: saveError,\r\n  } = useFetch(saveResume);\r\n\r\n  const formValues = watch();\r\n\r\n  useEffect(() => {\r\n    if (intialContent) setActiveTab(\"preview\");\r\n  }, [intialContent]);\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex flex-col md:flex-row justify-between items-center gap-2\">\r\n        <h1 className=\"text-5xl md:text-6xl font-extrabold tracking-tight text-transparent bg-clip-text bg-gradient-to-r from-blue-600 via-purple-500 to-pink-500 animate-gradient-shift\">\r\n          Resume Builder\r\n        </h1>\r\n\r\n        <div className=\"space-x-2\">\r\n          <Button variant=\"destructive\">\r\n            <Save className=\"h-4 w-4\" />\r\n            Save\r\n          </Button>\r\n          <Button>\r\n            <Download className=\"h-4 w-4\" />\r\n            Download PDF\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"edit\">Form</TabsTrigger>\r\n          <TabsTrigger value=\"preview\">Password</TabsTrigger>\r\n        </TabsList>\r\n        <TabsContent value=\"edit\">\r\n          <form>\r\n            <div>\r\n              <h3 className=\"text-lg font-medium\">Contact Information</h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 border rounded-lg bg-muted/50\">\r\n                <div className=\"space-y-2\">\r\n                  <label className=\"text-sm font-medium\">Email</label>\r\n                  <Input\r\n                    {...register(\"contactInfo.email\")}\r\n                    type=\"email\"\r\n                    placeholder=\"your@email.com\"\r\n                    error={errors.contactInfo?.email}\r\n                  />\r\n                  {errors.contactInfo?.email && (\r\n                    <p className=\"text-sm text-red-500\">\r\n                      {errors.contactInfo.email.message}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </TabsContent>\r\n        <TabsContent value=\"preview\">Change your password here.</TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeBuilder;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;;AAaA,MAAM,gBAAgB,CAAC,EAAE,aAAa,EAAE;;IACtC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,EACJ,OAAO,EACP,QAAQ,EACR,YAAY,EACZ,KAAK,EACL,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;QACV,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,uHAAA,CAAA,eAAY;QAClC,eAAe;YACb,aAAa,CAAC;YACd,SAAS;YACT,QAAQ;YACR,YAAY,EAAE;YACd,WAAW,EAAE;YACb,UAAU,EAAE;QACd;IACF;IAEA,MAAM,EACJ,SAAS,QAAQ,EACjB,IAAI,YAAY,EAChB,MAAM,UAAU,EAChB,OAAO,SAAS,EACjB,GAAG,CAAA,GAAA,wHAAA,CAAA,UAAQ,AAAD,EAAE,kJAAA,CAAA,aAAU;IAEvB,MAAM,aAAa;IAEnB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,eAAe,aAAa;QAClC;kCAAG;QAAC;KAAc;IAElB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAoK;;;;;;kCAIlL,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,8HAAA,CAAA,SAAM;gCAAC,SAAQ;;kDACd,6LAAC,qMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCAAY;;;;;;;0CAG9B,6LAAC,8HAAA,CAAA,SAAM;;kDACL,6LAAC,6MAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;oCAAY;;;;;;;;;;;;;;;;;;;0BAMtC,6LAAC,4HAAA,CAAA,OAAI;gBAAC,OAAO;gBAAW,eAAe;;kCACrC,6LAAC,4HAAA,CAAA,WAAQ;;0CACP,6LAAC,4HAAA,CAAA,cAAW;gCAAC,OAAM;0CAAO;;;;;;0CAC1B,6LAAC,4HAAA,CAAA,cAAW;gCAAC,OAAM;0CAAU;;;;;;;;;;;;kCAE/B,6LAAC,4HAAA,CAAA,cAAW;wBAAC,OAAM;kCACjB,cAAA,6LAAC;sCACC,cAAA,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDAAsB;;;;;;kDACpC,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAsB;;;;;;8DACvC,6LAAC,6HAAA,CAAA,QAAK;oDACH,GAAG,SAAS,oBAAoB;oDACjC,MAAK;oDACL,aAAY;oDACZ,OAAO,OAAO,WAAW,EAAE;;;;;;gDAE5B,OAAO,WAAW,EAAE,uBACnB,6LAAC;oDAAE,WAAU;8DACV,OAAO,WAAW,CAAC,KAAK,CAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQ/C,6LAAC,4HAAA,CAAA,cAAW;wBAAC,OAAM;kCAAU;;;;;;;;;;;;;;;;;;AAIrC;GArFM;;QASA,iKAAA,CAAA,UAAO;QAiBP,wHAAA,CAAA,UAAQ;;;KA1BR;uCAuFS","debugId":null}}]
}